cmake_minimum_required(VERSION 3.14)

project(hammer CXX)

# ──────────────────────────────────────────────────────────────────────────────
# 1. Dependencies:
# CLI11
# AsmJit
# indicators
# ──────────────────────────────────────────────────────────────────────────────
include(FetchContent)

# CLI11 -----------------------------------------------------------------------
FetchContent_Declare(
        CLI11
        GIT_REPOSITORY https://github.com/CLIUtils/CLI11.git
        GIT_TAG        v2.5.0
)
FetchContent_MakeAvailable(CLI11)
if (NOT TARGET CLI11::CLI11)
    message(FATAL_ERROR "Failed to fetch CLI11 library.")
endif()

# AsmJit ----------------------------------------------------------------------
set(MESSAGE_QUIET ON)
FetchContent_Declare(
        asmjit
        GIT_REPOSITORY https://github.com/asmjit/asmjit.git
        GIT_TAG 8315855c6432039eb39e541664f9df2f84be40b6
)
FetchContent_MakeAvailable(asmjit)
set(MESSAGE_QUIET OFF)
if (NOT TARGET asmjit)
    message(FATAL_ERROR "Failed to fetch AsmJit library.")
endif()

# Disable compiler warnings for the asmjit target
if (TARGET asmjit)
    get_target_property(ASMJIT_INCLUDE_DIRS asmjit INTERFACE_INCLUDE_DIRECTORIES)
    foreach(dir IN LISTS ASMJIT_INCLUDE_DIRS)
        include_directories(SYSTEM "${dir}")
    endforeach()
endif()

# indicators --------------------------------------------------------------
# Latest tagged release as of May 2025 is v2.3.0
FetchContent_Declare(
        indicators
        GIT_REPOSITORY  https://github.com/p-ranav/indicators.git
        GIT_TAG         master
)
FetchContent_MakeAvailable(indicators)

# The project exports an *alias target* called indicators::indicators
if (NOT TARGET indicators::indicators)
    message(FATAL_ERROR "Failed to fetch indicators library.")
endif()

# ──────────────────────────────────────────────────────────────────────────────
# 2. Global compile / link settings
# ──────────────────────────────────────────────────────────────────────────────
set(CMAKE_CXX_STANDARD 20)
set(CMAKE_CXX_STANDARD_REQUIRED ON)

# Default flags
set(CMAKE_CXX_FLAGS
        "-funroll-loops -march=native -masm=intel -Wall -Wextra -Wpedantic \
     -Wno-unused-function -Wno-unused-variable -Wno-unused-parameter \
     -Wno-comment -Wno-unused-value"
)
set(LDFLAGS "-lrt")

# Build‑type flags
set(CMAKE_CXX_FLAGS_RELEASE "-O2")
set(CMAKE_CXX_FLAGS_DEBUG   "-O0 -ggdb3")

add_compile_options(${CPPFLAGS})
add_link_options(${LDFLAGS})

# Required user‑provided macro
if (NOT DEFINED RANKS)
    message(FATAL_ERROR "RANKS is not defined. Please configure with -DRANKS=<n>.")
endif()
add_compile_definitions(RANKS=${RANKS})

# ──────────────────────────────────────────────────────────────────────────────
# 3. Source files
# ──────────────────────────────────────────────────────────────────────────────
set(SOURCES
        src/main.cpp
        src/gen_rows.cpp
        src/hammer.cpp
        src/hammer.hpp
        src/pagemap.hpp
        src/dram_address.cpp
        src/dram_address.hpp
        src/allocation.cpp
        src/allocation.hpp
        src/measurements.cpp
        src/measurements.hpp
        src/hammer/jitted.cpp
        src/hammer/jitted.hpp
        src/hammer/args.hpp
        src/hammer/pattern.hpp
        src/hammer/pattern.cpp
        src/hammer/bit_flips.hpp
        src/hammer/bit_flips.cpp
        src/rubicon.cpp
        src/rubicon.h
        src/allocation_4mb.cpp
        src/allocation_4mb.hpp
)

# ──────────────────────────────────────────────────────────────────────────────
# 4. Executable & linkage
# ──────────────────────────────────────────────────────────────────────────────
add_executable(hammer ${SOURCES})

target_include_directories(hammer
        PRIVATE
        ${CMAKE_SOURCE_DIR}
)

target_link_libraries(hammer
        PRIVATE
        CLI11::CLI11
        asmjit
        indicators::indicators
)

# ──────────────────────────────────────────────────────────────────────────────
# 5. Thread support
# ──────────────────────────────────────────────────────────────────────────────
find_package(Threads REQUIRED)
